name: Unity Test
on: [push]
jobs:
  requestManualActivationFile:
    name: Request manual activation file ðŸ”‘
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2019.2.6f1
    steps:
      # Checkout repository
      - uses: actions/checkout@v2

      # Request manual activation file
      - uses: webbertakken/unity-request-manual-activation-file@v1.1
        id: getManualLicenseFile
        with:
          unityVersion: ${{ matrix.unityVersion }}

      # Upload artifact (Unity_v20XX.X.XXXX.alf)
      - uses: actions/upload-artifact@v1
        with:
          name: Manual Activation File
          path: ${{ steps.getManualLicenseFile.outputs.filePath }}

  requestActivation:
    name: Request activation âœ”
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: webbertakken/unity-activate@v1.2

  activateAndThenReturnLicense:
    name: returnLicense ðŸŽˆ
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: webbertakken/unity-activate@v1.2
      - uses: webbertakken/unity-return-license@v1:
 
  testRunnerInEditMode:
    name: Test in editmode
    runs-on: ubuntu-latest
    steps:
      # Checkout repository (required to test local actions)
      - uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library-test-project-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-test-project-
            Library-
      # Configure test runner
      - uses: webbertakken/unity-test-runner@v1.3
        id: testRunner
        with:
          projectPath: ./
          testMode: editmode

      # Upload artifact
      - uses: actions/upload-artifact@v1
        with:
          name: Test results (edit mode)
          path: ${{ steps.testRunner.outputs.artifactsPath }}


    
