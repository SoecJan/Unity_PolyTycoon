name: Actions üòé

on:
  pull_request: {}
  push: { branches: [master] }

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
#  readmeWorkflow:
#    name: Readme Workflow ‚ú®
#    runs-on: ubuntu-latest
#    steps:
#      # Checkout
#      - name: Checkout repository
#        uses: actions/checkout@v2
#        with:
#          lfs: true
#
#      # Cache
#      - uses: actions/cache@v1.1.0
#        with:
#          path: test-project/Library
#          key: Library-test-project-WebGL
#
#      # Test
#      - name: Run tests
#        uses: webbertakken/unity-test-runner@v1.3
#        with:
#          projectPath: test-project
#          unityVersion: 2019.2.11f1
#
#      # Build
#      - name: Build project
#        uses: webbertakken/unity-builder@v0.10
#        with:
#          projectPath: test-project
#          unityVersion: 2019.2.11f1
#          targetPlatform: WebGL
#
#      # Output
#      - uses: actions/upload-artifact@v1
#        with:
#          name: Build
#          path: build

  #
  # End of readme workflow.
  #
  # Below is a test of most combinations, for testing integrity.
  #

  requestManualActivationFile:
    name: Request manual activation file üîë
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2019.2.6f1
    steps:
      # Checkout repository
      - uses: actions/checkout@v2

      # Request manual activation file
      - uses: webbertakken/unity-request-manual-activation-file@v1.1
        id: getManualLicenseFile
        with:
          unityVersion: ${{ matrix.unityVersion }}

      # Upload artifact (Unity_v20XX.X.XXXX.alf)
      - uses: actions/upload-artifact@v1
        with:
          name: Manual Activation File
          path: ${{ steps.getManualLicenseFile.outputs.filePath }}

  requestActivation:
    name: Request activation ‚úî
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: webbertakken/unity-activate@v1.2

  activateAndThenReturnLicense:
    name: returnLicense üéà
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: webbertakken/unity-activate@v1.2
      - uses: webbertakken/unity-return-license@v1

  testRunnerInEditMode:
    name: Test in editmode üìù
    runs-on: ubuntu-latest
    steps:
      # Checkout repository (required to test local actions)
      - uses: actions/checkout@v2
        with:
          lfs: true

      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library-test-project-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-test-project-
            Library-
      # Configure test runner
      - uses: webbertakken/unity-test-runner@v1.3
        id: testRunner
        with:
          projectPath: .
          testMode: editmode

      # Upload artifact
      - uses: actions/upload-artifact@v1
        with:
          name: Test results (edit mode)
          path: ${{ steps.testRunner.outputs.artifactsPath }}
